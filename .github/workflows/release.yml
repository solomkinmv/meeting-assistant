name: Release version
on:
  push:
    branches:
      - main
    paths:
      - '**.js'
      - '**.ts'
      - '**.java'
      - '**.css'
      - '**.html'
      - '**.yml'
      - '**.yaml'
      - '**/pom.xml'
      - '**.properties'
      - '**Dockerfile'

jobs:
  build:

    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[CI]') && !contains(github.event.head_commit.message, '[skip release]')"

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.COMMIT_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Configure Git user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Increment service version for release
        run: |
          ./mvnw build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.incrementalVersion}
          VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          git commit -am "[CI] prepare release v$VERSION"    
          git tag "v$VERSION" 
          git push --atomic origin main "v$VERSION"    

      - name: Build client and copy to backend resources
        run: |
          cd client
          npm install
          npm run deploy

      - name: Build docker container and push
        run: |
          ./mvnw -B package docker:build docker:push

      - name: Increment service version for next development iteration
        run: |
          ./mvnw build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-SNAPSHOT
          git add ./\pom.xml
          git commit -m "[CI] prepare for next development iteration"    
          git push origin main

      - name: DigitalOcean App Platform deployment
        uses: digitalocean/app_action@v1.1.2
        with:
          app_name: meeting-assistant
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          images: '[
                     {
                       "name": "solomkinmv-meeting-assistant",
                       "image": {
                         "registry_type": "DOCKER_HUB",
                         "registry": "solomkinmv",
                         "repository": "meeting-assistant",
                         "tag": "${{ env.VERSION }}"
                       }
                     }
                   ]'

      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v3.1.0
        with:
          file: ./target/site/jacoco/jacoco.xml
